{"version":3,"sources":["app.ts","environment.ts","main.ts","shell.ts","models/index.ts","models/priority.ts","models/todo.ts","resources/index.ts","services/todo-service.ts","utils/mapper.ts","resources/elements/todo-item.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { TodoService } from './services/todo-service';\nimport { autoinject } from 'aurelia-framework';\nimport { Todo } from './models/index';\n\n@autoinject()\nexport class App {\n\n    private _todoService: TodoService;\n    todoItems: any[];\n\n    constructor(todoService: TodoService) {\n        this._todoService = todoService;\n        this.todoItems = this._todoService.todo; //get a reference.\n    }\n\n    created() {\n        this._todoService.getTodoItems();\n    }\n\n    addItem(description: string) {\n        this._todoService.createTodo(description);\n    }\n\n    removeItem(todo: Todo) {\n        this._todoService.remove(todo);\n    }\n\n\n}\n","export default {\n  debug: true,\n  testing: true,\n  apiUrl: 'http://localhost:5000/api/v1'\n};\n","import { Aurelia } from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot(\"shell\"));\n}\n","import { PipelineStep, RouterConfiguration, Router } from 'aurelia-router';\r\nimport { autoinject } from 'aurelia-framework';\r\n\r\nimport * as LogManager from 'aurelia-logging'\r\nvar log = LogManager.getLogger('shell');\r\n\r\n@autoinject()\r\nexport class Shell {\r\n\r\n    private _router: Router;\r\n\r\n    configureRouter(config: RouterConfiguration, router: Router): void {\r\n        this._router = router;\r\n        config.title = 'ArmChair - Todo';\r\n\r\n        config.map([\r\n            { route: ['', 'active', 'all'], name: 'app', moduleId: 'app' }\r\n        ]);\r\n    }\r\n\r\n}","export * from './priority';\r\nexport * from './todo';","export enum Priority {\r\n    High = 3,\r\n    Medium = 2,\r\n    Low = 1\r\n}","import { Priority } from './priority';\r\nimport { mapClass } from '@dboneslabs/mpr/annotations/map-class';\r\nimport { mapProperty } from '@dboneslabs/mpr/annotations/map-property';\r\n\r\n@mapClass(\"models.todo\")\r\nexport class Todo {\r\n\r\n    @mapProperty()\r\n    id: string;\r\n\r\n    @mapProperty()\r\n    description: string;\r\n\r\n    @mapProperty()\r\n    isComplete?: boolean;\r\n\r\n    @mapProperty()\r\n    created?: Date;\r\n\r\n    @mapProperty()\r\n    priority: Priority = Priority.Medium;\r\n \r\n}\r\n\r\n","import {FrameworkConfiguration} from 'aurelia-framework';\nimport { TodoItem } from './elements/todo-item';\n\nexport function configure(config: FrameworkConfiguration) {\n  config.globalResources('./elements/todo-item');\n}\n\nexport {\n  TodoItem\n}","import { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { Todo } from '../models/todo';\r\nimport { Priority } from '../models/priority';\r\nimport { singleton, autoinject } from 'aurelia-framework';\r\nimport environment from '../environment';\r\nimport { Mapper } from '../utils/mapper';\r\nimport { LogManager } from \"aurelia-framework\";\r\nimport { Logger } from \"aurelia-logging\";\r\nimport { Types } from '@dboneslabs/mpr/core/types';\r\n\r\n\r\nvar log = <Logger>LogManager.getLogger('todo-service');\r\n\r\n@autoinject()\r\n@singleton()\r\nexport class TodoService {\r\n\r\n    todo: Todo[] = [];\r\n    private _http: HttpClient;\r\n    private _mapper: Mapper;\r\n\r\n    constructor(http: HttpClient, mapper: Mapper) {\r\n        this._http = http;\r\n        this._mapper = mapper;\r\n\r\n        http.configure(config => {\r\n            config\r\n                .withBaseUrl(environment.apiUrl);\r\n        });\r\n\r\n    }\r\n\r\n    async createTodo(description: string, priority: Priority = Priority.Medium) {\r\n\r\n        let task = new Todo();\r\n        task.priority = priority;\r\n        task.description = description;\r\n\r\n        await this._http.fetch('/tasks', {\r\n            method: 'post',\r\n            //mode: 'no-cors',\r\n            body: json(task)\r\n        }).then(response => response.json())\r\n        \r\n        this.getTodoItems();\r\n    }\r\n\r\n    async getTodoItems() {\r\n\r\n        let data = await this._http.fetch('/tasks', {\r\n            //mode: 'no-cors',\r\n            method: 'get'\r\n        }).then(response => response.json());\r\n\r\n        var items = this._mapper.map(data, Types.asArray(Todo));\r\n        this.setItems(items);\r\n\r\n    }\r\n\r\n    async remove(todo: Todo) {\r\n\r\n        await this._http.fetch(`/tasks${todo.id}`, {\r\n            //mode: 'no-cors',\r\n            method: 'delete'\r\n        });\r\n\r\n        this.getTodoItems();\r\n\r\n    }\r\n\r\n    private setItems(items) {\r\n        \r\n        this.todo.length = 0;\r\n    \r\n        items.forEach(item => {\r\n            this.todo.push(item);\r\n        });\r\n    \r\n    }\r\n\r\n}","import { singleton } from 'aurelia-framework';\r\nimport { Todo } from '../models/todo';\r\nimport { MapperFactory } from '@dboneslabs/mpr/mapper-factory';\r\nimport { Setup } from '@dboneslabs/mpr/initializing/setup';\r\nimport { Builder } from '@dboneslabs/mpr/initializing/builders/builder';\r\nimport { Types } from '@dboneslabs/mpr/core/types';\r\nimport { Mapper as Mpr } from '@dboneslabs/mpr/mapper';\r\nimport { TypeConverter } from '@dboneslabs/mpr/core/type-converter';\r\nimport { MappingContext } from '@dboneslabs/mpr/core/mapping-context';\r\n\r\nexport class DtoTypes {\r\n    static todo = \"Todo.Service.Dto.Resources.TodoResource, Todo.Service\";\r\n    static todoCollection = \"Todo.Service.Dto.Resources.CollectionResource`1[[Todo.Service.Dto.Resources.TodoResource, Todo.Service]], Todo.Service\";\r\n}\r\n\r\n\r\nclass TodoSetup implements Setup {\r\n    configure(builder: Builder): void {\r\n\r\n        //add types\r\n        builder.addType(Todo).scanForAttributes()\r\n\r\n        builder.addType(DtoTypes.todo)\r\n            .addProperty('id', Types.string)\r\n            .addProperty('description', Types.string)\r\n            .addProperty('isComplete', Types.boolean)\r\n            .addProperty('creaated', Types.date)\r\n            .addProperty('priority', Types.number);\r\n\r\n        builder.addType(DtoTypes.todoCollection)\r\n            .addProperty(\"data\", Types.AsArray(DtoTypes.todo));\r\n\r\n        //add maps\r\n        builder.createMap(DtoTypes.todo, Todo);\r\n\r\n        builder.createMap<Todo, any>(Todo, DtoTypes.todo)\r\n            .forMember(\"$type\", opts => opts.using(src => DtoTypes.todo));\r\n\r\n        builder.createMap<any, Todo[]>(DtoTypes.todoCollection, Types.asArray(Todo))\r\n            .withSource(src => src.data, opt => opt.flattern());\r\n    }\r\n\r\n}\r\n\r\n\r\n@singleton()\r\nexport class Mapper {\r\n\r\n    private _mapper: Mpr;\r\n\r\n    constructor() {\r\n        let factory = new MapperFactory();\r\n        factory.addSetup(new TodoSetup());\r\n        this._mapper = factory.createMapper();\r\n    }\r\n\r\n    map(source: any, targetType: string): any {\r\n        return this._mapper.map(source, targetType);\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nclass TodoResourceCollectionTodoModelCollectionConverter implements TypeConverter {\r\n    sourceType: string = DtoTypes.todoCollection;\r\n    destinationType: string = Types.AsArray((<any>Todo).$$type);\r\n    execute(context: MappingContext): void {\r\n        let data: any[] = context.source.data;\r\n        context.destination = data.map(item => {\r\n            return context.mapper.map(item, (<any>Todo).$$type);\r\n        });\r\n    }\r\n\r\n}\r\n*/","import { bindable, bindingMode } from 'aurelia-framework';\r\nimport { Todo } from '../../models/index';\r\n\r\nconst ENTER_KEY = 13;\r\nconst ESC_KEY = 27;\r\n\r\nexport class TodoItem {\r\n\r\n   @bindable todo: Todo;\r\n\r\n   \r\n\r\n    \r\n\r\n}"],"sourceRoot":".."}